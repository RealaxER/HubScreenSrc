// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ble.proto

#ifndef PROTOBUF_INCLUDED_ble_2eproto
#define PROTOBUF_INCLUDED_ble_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ble_2eproto 

namespace protobuf_ble_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ble_2eproto
class Ble_t;
class Ble_tDefaultTypeInternal;
extern Ble_tDefaultTypeInternal _Ble_t_default_instance_;
class SwBle_t;
class SwBle_tDefaultTypeInternal;
extern SwBle_tDefaultTypeInternal _SwBle_t_default_instance_;
namespace google {
namespace protobuf {
template<> ::Ble_t* Arena::CreateMaybeMessage<::Ble_t>(Arena*);
template<> ::SwBle_t* Arena::CreateMaybeMessage<::SwBle_t>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Ble_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Ble_t) */ {
 public:
  Ble_t();
  virtual ~Ble_t();

  Ble_t(const Ble_t& from);

  inline Ble_t& operator=(const Ble_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ble_t(Ble_t&& from) noexcept
    : Ble_t() {
    *this = ::std::move(from);
  }

  inline Ble_t& operator=(Ble_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ble_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ble_t* internal_default_instance() {
    return reinterpret_cast<const Ble_t*>(
               &_Ble_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Ble_t* other);
  friend void swap(Ble_t& a, Ble_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ble_t* New() const final {
    return CreateMaybeMessage<Ble_t>(NULL);
  }

  Ble_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ble_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ble_t& from);
  void MergeFrom(const Ble_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ble_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SwBle_t sw = 1;
  bool has_sw() const;
  void clear_sw();
  static const int kSwFieldNumber = 1;
  private:
  const ::SwBle_t& _internal_sw() const;
  public:
  const ::SwBle_t& sw() const;
  ::SwBle_t* release_sw();
  ::SwBle_t* mutable_sw();
  void set_allocated_sw(::SwBle_t* sw);

  // bool sync = 2;
  void clear_sync();
  static const int kSyncFieldNumber = 2;
  bool sync() const;
  void set_sync(bool value);

  // @@protoc_insertion_point(class_scope:Ble_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SwBle_t* sw_;
  bool sync_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ble_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwBle_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SwBle_t) */ {
 public:
  SwBle_t();
  virtual ~SwBle_t();

  SwBle_t(const SwBle_t& from);

  inline SwBle_t& operator=(const SwBle_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SwBle_t(SwBle_t&& from) noexcept
    : SwBle_t() {
    *this = ::std::move(from);
  }

  inline SwBle_t& operator=(SwBle_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SwBle_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SwBle_t* internal_default_instance() {
    return reinterpret_cast<const SwBle_t*>(
               &_SwBle_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SwBle_t* other);
  friend void swap(SwBle_t& a, SwBle_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SwBle_t* New() const final {
    return CreateMaybeMessage<SwBle_t>(NULL);
  }

  SwBle_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SwBle_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SwBle_t& from);
  void MergeFrom(const SwBle_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SwBle_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool status = 17;
  void clear_status();
  static const int kStatusFieldNumber = 17;
  bool status() const;
  void set_status(bool value);

  // uint32 deviceID = 15;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 15;
  ::google::protobuf::uint32 deviceid() const;
  void set_deviceid(::google::protobuf::uint32 value);

  // uint32 endpoint = 16;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 16;
  ::google::protobuf::uint32 endpoint() const;
  void set_endpoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SwBle_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool status_;
  ::google::protobuf::uint32 deviceid_;
  ::google::protobuf::uint32 endpoint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ble_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ble_t

// .SwBle_t sw = 1;
inline bool Ble_t::has_sw() const {
  return this != internal_default_instance() && sw_ != NULL;
}
inline void Ble_t::clear_sw() {
  if (GetArenaNoVirtual() == NULL && sw_ != NULL) {
    delete sw_;
  }
  sw_ = NULL;
}
inline const ::SwBle_t& Ble_t::_internal_sw() const {
  return *sw_;
}
inline const ::SwBle_t& Ble_t::sw() const {
  const ::SwBle_t* p = sw_;
  // @@protoc_insertion_point(field_get:Ble_t.sw)
  return p != NULL ? *p : *reinterpret_cast<const ::SwBle_t*>(
      &::_SwBle_t_default_instance_);
}
inline ::SwBle_t* Ble_t::release_sw() {
  // @@protoc_insertion_point(field_release:Ble_t.sw)
  
  ::SwBle_t* temp = sw_;
  sw_ = NULL;
  return temp;
}
inline ::SwBle_t* Ble_t::mutable_sw() {
  
  if (sw_ == NULL) {
    auto* p = CreateMaybeMessage<::SwBle_t>(GetArenaNoVirtual());
    sw_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Ble_t.sw)
  return sw_;
}
inline void Ble_t::set_allocated_sw(::SwBle_t* sw) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sw_;
  }
  if (sw) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sw = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sw, submessage_arena);
    }
    
  } else {
    
  }
  sw_ = sw;
  // @@protoc_insertion_point(field_set_allocated:Ble_t.sw)
}

// bool sync = 2;
inline void Ble_t::clear_sync() {
  sync_ = false;
}
inline bool Ble_t::sync() const {
  // @@protoc_insertion_point(field_get:Ble_t.sync)
  return sync_;
}
inline void Ble_t::set_sync(bool value) {
  
  sync_ = value;
  // @@protoc_insertion_point(field_set:Ble_t.sync)
}

// -------------------------------------------------------------------

// SwBle_t

// uint32 deviceID = 15;
inline void SwBle_t::clear_deviceid() {
  deviceid_ = 0u;
}
inline ::google::protobuf::uint32 SwBle_t::deviceid() const {
  // @@protoc_insertion_point(field_get:SwBle_t.deviceID)
  return deviceid_;
}
inline void SwBle_t::set_deviceid(::google::protobuf::uint32 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:SwBle_t.deviceID)
}

// uint32 endpoint = 16;
inline void SwBle_t::clear_endpoint() {
  endpoint_ = 0u;
}
inline ::google::protobuf::uint32 SwBle_t::endpoint() const {
  // @@protoc_insertion_point(field_get:SwBle_t.endpoint)
  return endpoint_;
}
inline void SwBle_t::set_endpoint(::google::protobuf::uint32 value) {
  
  endpoint_ = value;
  // @@protoc_insertion_point(field_set:SwBle_t.endpoint)
}

// bool status = 17;
inline void SwBle_t::clear_status() {
  status_ = false;
}
inline bool SwBle_t::status() const {
  // @@protoc_insertion_point(field_get:SwBle_t.status)
  return status_;
}
inline void SwBle_t::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:SwBle_t.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ble_2eproto
