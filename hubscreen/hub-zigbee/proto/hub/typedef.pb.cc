// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: typedef.proto

#include "typedef.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_typedef_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_typedef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Led_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_typedef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ota_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_typedef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Sw_t;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_typedef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vpn_t;
}  // namespace protobuf_typedef_2eproto
class Led_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Led_t>
      _instance;
} _Led_t_default_instance_;
class Sw_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Sw_t>
      _instance;
} _Sw_t_default_instance_;
class Ota_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ota_t>
      _instance;
} _Ota_t_default_instance_;
class KeepAlive_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeepAlive_t>
      _instance;
} _KeepAlive_t_default_instance_;
class BufferDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Buffer>
      _instance;
} _Buffer_default_instance_;
class Vpn_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vpn_t>
      _instance;
} _Vpn_t_default_instance_;
class Vendor_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vendor_t>
      _instance;
} _Vendor_t_default_instance_;
namespace protobuf_typedef_2eproto {
static void InitDefaultsLed_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Led_t_default_instance_;
    new (ptr) ::Led_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Led_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Led_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLed_t}, {}};

static void InitDefaultsSw_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Sw_t_default_instance_;
    new (ptr) ::Sw_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Sw_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Sw_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSw_t}, {}};

static void InitDefaultsOta_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Ota_t_default_instance_;
    new (ptr) ::Ota_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Ota_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ota_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOta_t}, {}};

static void InitDefaultsKeepAlive_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeepAlive_t_default_instance_;
    new (ptr) ::KeepAlive_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeepAlive_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeepAlive_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeepAlive_t}, {}};

static void InitDefaultsBuffer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Buffer_default_instance_;
    new (ptr) ::Buffer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Buffer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Buffer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBuffer}, {
      &protobuf_typedef_2eproto::scc_info_Ota_t.base,
      &protobuf_typedef_2eproto::scc_info_Vpn_t.base,
      &protobuf_typedef_2eproto::scc_info_Led_t.base,
      &protobuf_typedef_2eproto::scc_info_Sw_t.base,}};

static void InitDefaultsVpn_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Vpn_t_default_instance_;
    new (ptr) ::Vpn_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vpn_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vpn_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVpn_t}, {}};

static void InitDefaultsVendor_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Vendor_t_default_instance_;
    new (ptr) ::Vendor_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vendor_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vendor_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVendor_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Led_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Sw_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ota_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeepAlive_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Buffer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vpn_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vendor_t.base);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Led_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Led_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Led_t, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Led_t, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Sw_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Sw_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Sw_t, ep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Sw_t, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Sw_t, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ota_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ota_t, check_ota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ota_t, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Ota_t, ack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeepAlive_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeepAlive_t, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, mac_hub_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, receiver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, cotroller_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, ota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, vpn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, led_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Buffer, sw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vpn_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vpn_t, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vpn_t, mac_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vendor_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vendor_t, mac_ven_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vendor_t, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vendor_t, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Led_t)},
  { 8, -1, sizeof(::Sw_t)},
  { 17, -1, sizeof(::Ota_t)},
  { 25, -1, sizeof(::KeepAlive_t)},
  { 31, -1, sizeof(::Buffer)},
  { 44, -1, sizeof(::Vpn_t)},
  { 51, -1, sizeof(::Vendor_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Led_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Sw_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Ota_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeepAlive_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Buffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vpn_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vendor_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "typedef.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rtypedef.proto\"2\n\005Led_t\022\014\n\004name\030\020 \001(\t\022\013"
      "\n\003mac\030\021 \001(\004\022\016\n\006status\030\022 \001(\010\"=\n\004Sw_t\022\014\n\004n"
      "ame\030\020 \001(\t\022\n\n\002ep\030\021 \001(\r\022\013\n\003mac\030\022 \001(\004\022\016\n\006st"
      "atus\030\023 \001(\010\"7\n\005Ota_t\022\021\n\tcheck_ota\030\020 \001(\010\022\016"
      "\n\006status\030\021 \001(\010\022\013\n\003ack\030\022 \001(\010\"&\n\013KeepAlive"
      "_t\022\027\n\006sender\030\001 \001(\0162\007.User_t\"\273\001\n\006Buffer\022\017"
      "\n\007mac_hub\030\001 \001(\t\022\027\n\006sender\030\002 \001(\0162\007.User_t"
      "\022\031\n\010receiver\030\003 \001(\0162\007.User_t\022\032\n\tcotroller"
      "\030\004 \001(\0162\007.User_t\022\023\n\003ota\030\020 \001(\0132\006.Ota_t\022\023\n\003"
      "vpn\030\021 \001(\0132\006.Vpn_t\022\023\n\003led\030\022 \003(\0132\006.Led_t\022\021"
      "\n\002sw\030\023 \003(\0132\005.Sw_t\"$\n\005Vpn_t\022\016\n\006status\030\001 \001"
      "(\010\022\013\n\003mac\030\002 \001(\t\"9\n\010Vendor_t\022\017\n\007mac_ven\030\001"
      " \001(\t\022\014\n\004data\030\002 \001(\t\022\016\n\006status\030\003 \001(\010*b\n\006Us"
      "er_t\022\007\n\003App\020\000\022\n\n\006Server\020\001\022\007\n\003Hub\020\002\022\n\n\006Zi"
      "gbee\020\003\022\007\n\003Ble\020\004\022\006\n\002Ai\020\005\022\010\n\004Wifi\020\006\022\n\n\006Scr"
      "een\020\007\022\007\n\003Ota\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 622);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "typedef.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_typedef_2eproto
const ::google::protobuf::EnumDescriptor* User_t_descriptor() {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_typedef_2eproto::file_level_enum_descriptors[0];
}
bool User_t_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Led_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Led_t::kNameFieldNumber;
const int Led_t::kMacFieldNumber;
const int Led_t::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Led_t::Led_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Led_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Led_t)
}
Led_t::Led_t(const Led_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&mac_) -
    reinterpret_cast<char*>(&status_)) + sizeof(mac_));
  // @@protoc_insertion_point(copy_constructor:Led_t)
}

void Led_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_) -
      reinterpret_cast<char*>(&status_)) + sizeof(mac_));
}

Led_t::~Led_t() {
  // @@protoc_insertion_point(destructor:Led_t)
  SharedDtor();
}

void Led_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Led_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Led_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Led_t& Led_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Led_t.base);
  return *internal_default_instance();
}


void Led_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Led_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mac_) -
      reinterpret_cast<char*>(&status_)) + sizeof(mac_));
  _internal_metadata_.Clear();
}

bool Led_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Led_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Led_t.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mac = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Led_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Led_t)
  return false;
#undef DO_
}

void Led_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Led_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 16;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Led_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->name(), output);
  }

  // uint64 mac = 17;
  if (this->mac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->mac(), output);
  }

  // bool status = 18;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Led_t)
}

::google::protobuf::uint8* Led_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Led_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 16;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Led_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->name(), target);
  }

  // uint64 mac = 17;
  if (this->mac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->mac(), target);
  }

  // bool status = 18;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Led_t)
  return target;
}

size_t Led_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Led_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 16;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bool status = 18;
  if (this->status() != 0) {
    total_size += 2 + 1;
  }

  // uint64 mac = 17;
  if (this->mac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mac());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Led_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Led_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Led_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Led_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Led_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Led_t)
    MergeFrom(*source);
  }
}

void Led_t::MergeFrom(const Led_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Led_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.mac() != 0) {
    set_mac(from.mac());
  }
}

void Led_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Led_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Led_t::CopyFrom(const Led_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Led_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Led_t::IsInitialized() const {
  return true;
}

void Led_t::Swap(Led_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Led_t::InternalSwap(Led_t* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(mac_, other->mac_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Led_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Sw_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Sw_t::kNameFieldNumber;
const int Sw_t::kEpFieldNumber;
const int Sw_t::kMacFieldNumber;
const int Sw_t::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Sw_t::Sw_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Sw_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Sw_t)
}
Sw_t::Sw_t(const Sw_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&mac_, &from.mac_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&mac_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:Sw_t)
}

void Sw_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mac_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&mac_)) + sizeof(status_));
}

Sw_t::~Sw_t() {
  // @@protoc_insertion_point(destructor:Sw_t)
  SharedDtor();
}

void Sw_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Sw_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Sw_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Sw_t& Sw_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Sw_t.base);
  return *internal_default_instance();
}


void Sw_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Sw_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mac_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&mac_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool Sw_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Sw_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Sw_t.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ep = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 mac = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Sw_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Sw_t)
  return false;
#undef DO_
}

void Sw_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Sw_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 16;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Sw_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->name(), output);
  }

  // uint32 ep = 17;
  if (this->ep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->ep(), output);
  }

  // uint64 mac = 18;
  if (this->mac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->mac(), output);
  }

  // bool status = 19;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Sw_t)
}

::google::protobuf::uint8* Sw_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Sw_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 16;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Sw_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->name(), target);
  }

  // uint32 ep = 17;
  if (this->ep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->ep(), target);
  }

  // uint64 mac = 18;
  if (this->mac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->mac(), target);
  }

  // bool status = 19;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Sw_t)
  return target;
}

size_t Sw_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Sw_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 16;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 mac = 18;
  if (this->mac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mac());
  }

  // uint32 ep = 17;
  if (this->ep() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ep());
  }

  // bool status = 19;
  if (this->status() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Sw_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Sw_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Sw_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Sw_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Sw_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Sw_t)
    MergeFrom(*source);
  }
}

void Sw_t::MergeFrom(const Sw_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Sw_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac() != 0) {
    set_mac(from.mac());
  }
  if (from.ep() != 0) {
    set_ep(from.ep());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Sw_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Sw_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sw_t::CopyFrom(const Sw_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Sw_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sw_t::IsInitialized() const {
  return true;
}

void Sw_t::Swap(Sw_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sw_t::InternalSwap(Sw_t* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mac_, other->mac_);
  swap(ep_, other->ep_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Sw_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ota_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ota_t::kCheckOtaFieldNumber;
const int Ota_t::kStatusFieldNumber;
const int Ota_t::kAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ota_t::Ota_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Ota_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ota_t)
}
Ota_t::Ota_t(const Ota_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&check_ota_, &from.check_ota_,
    static_cast<size_t>(reinterpret_cast<char*>(&ack_) -
    reinterpret_cast<char*>(&check_ota_)) + sizeof(ack_));
  // @@protoc_insertion_point(copy_constructor:Ota_t)
}

void Ota_t::SharedCtor() {
  ::memset(&check_ota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ack_) -
      reinterpret_cast<char*>(&check_ota_)) + sizeof(ack_));
}

Ota_t::~Ota_t() {
  // @@protoc_insertion_point(destructor:Ota_t)
  SharedDtor();
}

void Ota_t::SharedDtor() {
}

void Ota_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ota_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ota_t& Ota_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Ota_t.base);
  return *internal_default_instance();
}


void Ota_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Ota_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&check_ota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ack_) -
      reinterpret_cast<char*>(&check_ota_)) + sizeof(ack_));
  _internal_metadata_.Clear();
}

bool Ota_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ota_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool check_ota = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &check_ota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ack = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ota_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ota_t)
  return false;
#undef DO_
}

void Ota_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ota_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool check_ota = 16;
  if (this->check_ota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->check_ota(), output);
  }

  // bool status = 17;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->status(), output);
  }

  // bool ack = 18;
  if (this->ack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->ack(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Ota_t)
}

::google::protobuf::uint8* Ota_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Ota_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool check_ota = 16;
  if (this->check_ota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->check_ota(), target);
  }

  // bool status = 17;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->status(), target);
  }

  // bool ack = 18;
  if (this->ack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->ack(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ota_t)
  return target;
}

size_t Ota_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ota_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool check_ota = 16;
  if (this->check_ota() != 0) {
    total_size += 2 + 1;
  }

  // bool status = 17;
  if (this->status() != 0) {
    total_size += 2 + 1;
  }

  // bool ack = 18;
  if (this->ack() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ota_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Ota_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Ota_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ota_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Ota_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Ota_t)
    MergeFrom(*source);
  }
}

void Ota_t::MergeFrom(const Ota_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Ota_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.check_ota() != 0) {
    set_check_ota(from.check_ota());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.ack() != 0) {
    set_ack(from.ack());
  }
}

void Ota_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Ota_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ota_t::CopyFrom(const Ota_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ota_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ota_t::IsInitialized() const {
  return true;
}

void Ota_t::Swap(Ota_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ota_t::InternalSwap(Ota_t* other) {
  using std::swap;
  swap(check_ota_, other->check_ota_);
  swap(status_, other->status_);
  swap(ack_, other->ack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ota_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeepAlive_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeepAlive_t::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAlive_t::KeepAlive_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_KeepAlive_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeepAlive_t)
}
KeepAlive_t::KeepAlive_t(const KeepAlive_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sender_ = from.sender_;
  // @@protoc_insertion_point(copy_constructor:KeepAlive_t)
}

void KeepAlive_t::SharedCtor() {
  sender_ = 0;
}

KeepAlive_t::~KeepAlive_t() {
  // @@protoc_insertion_point(destructor:KeepAlive_t)
  SharedDtor();
}

void KeepAlive_t::SharedDtor() {
}

void KeepAlive_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeepAlive_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAlive_t& KeepAlive_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_KeepAlive_t.base);
  return *internal_default_instance();
}


void KeepAlive_t::Clear() {
// @@protoc_insertion_point(message_clear_start:KeepAlive_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_ = 0;
  _internal_metadata_.Clear();
}

bool KeepAlive_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeepAlive_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .User_t sender = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sender(static_cast< ::User_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeepAlive_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeepAlive_t)
  return false;
#undef DO_
}

void KeepAlive_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeepAlive_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .User_t sender = 1;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeepAlive_t)
}

::google::protobuf::uint8* KeepAlive_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeepAlive_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .User_t sender = 1;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeepAlive_t)
  return target;
}

size_t KeepAlive_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeepAlive_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .User_t sender = 1;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeepAlive_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeepAlive_t)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAlive_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAlive_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeepAlive_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeepAlive_t)
    MergeFrom(*source);
  }
}

void KeepAlive_t::MergeFrom(const KeepAlive_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeepAlive_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender() != 0) {
    set_sender(from.sender());
  }
}

void KeepAlive_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeepAlive_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAlive_t::CopyFrom(const KeepAlive_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeepAlive_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAlive_t::IsInitialized() const {
  return true;
}

void KeepAlive_t::Swap(KeepAlive_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAlive_t::InternalSwap(KeepAlive_t* other) {
  using std::swap;
  swap(sender_, other->sender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeepAlive_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Buffer::InitAsDefaultInstance() {
  ::_Buffer_default_instance_._instance.get_mutable()->ota_ = const_cast< ::Ota_t*>(
      ::Ota_t::internal_default_instance());
  ::_Buffer_default_instance_._instance.get_mutable()->vpn_ = const_cast< ::Vpn_t*>(
      ::Vpn_t::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Buffer::kMacHubFieldNumber;
const int Buffer::kSenderFieldNumber;
const int Buffer::kReceiverFieldNumber;
const int Buffer::kCotrollerFieldNumber;
const int Buffer::kOtaFieldNumber;
const int Buffer::kVpnFieldNumber;
const int Buffer::kLedFieldNumber;
const int Buffer::kSwFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Buffer::Buffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Buffer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Buffer)
}
Buffer::Buffer(const Buffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      led_(from.led_),
      sw_(from.sw_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_hub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_hub().size() > 0) {
    mac_hub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_hub_);
  }
  if (from.has_ota()) {
    ota_ = new ::Ota_t(*from.ota_);
  } else {
    ota_ = NULL;
  }
  if (from.has_vpn()) {
    vpn_ = new ::Vpn_t(*from.vpn_);
  } else {
    vpn_ = NULL;
  }
  ::memcpy(&sender_, &from.sender_,
    static_cast<size_t>(reinterpret_cast<char*>(&cotroller_) -
    reinterpret_cast<char*>(&sender_)) + sizeof(cotroller_));
  // @@protoc_insertion_point(copy_constructor:Buffer)
}

void Buffer::SharedCtor() {
  mac_hub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cotroller_) -
      reinterpret_cast<char*>(&ota_)) + sizeof(cotroller_));
}

Buffer::~Buffer() {
  // @@protoc_insertion_point(destructor:Buffer)
  SharedDtor();
}

void Buffer::SharedDtor() {
  mac_hub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ota_;
  if (this != internal_default_instance()) delete vpn_;
}

void Buffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Buffer::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Buffer& Buffer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Buffer.base);
  return *internal_default_instance();
}


void Buffer::Clear() {
// @@protoc_insertion_point(message_clear_start:Buffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  led_.Clear();
  sw_.Clear();
  mac_hub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ota_ != NULL) {
    delete ota_;
  }
  ota_ = NULL;
  if (GetArenaNoVirtual() == NULL && vpn_ != NULL) {
    delete vpn_;
  }
  vpn_ = NULL;
  ::memset(&sender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cotroller_) -
      reinterpret_cast<char*>(&sender_)) + sizeof(cotroller_));
  _internal_metadata_.Clear();
}

bool Buffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Buffer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mac_hub = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_hub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_hub().data(), static_cast<int>(this->mac_hub().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Buffer.mac_hub"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .User_t sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sender(static_cast< ::User_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .User_t receiver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_receiver(static_cast< ::User_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .User_t cotroller = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cotroller(static_cast< ::User_t >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Ota_t ota = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ota()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Vpn_t vpn = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vpn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Led_t led = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_led()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Sw_t sw = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Buffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Buffer)
  return false;
#undef DO_
}

void Buffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Buffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_hub = 1;
  if (this->mac_hub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_hub().data(), static_cast<int>(this->mac_hub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Buffer.mac_hub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mac_hub(), output);
  }

  // .User_t sender = 2;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->sender(), output);
  }

  // .User_t receiver = 3;
  if (this->receiver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->receiver(), output);
  }

  // .User_t cotroller = 4;
  if (this->cotroller() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->cotroller(), output);
  }

  // .Ota_t ota = 16;
  if (this->has_ota()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_ota(), output);
  }

  // .Vpn_t vpn = 17;
  if (this->has_vpn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_vpn(), output);
  }

  // repeated .Led_t led = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->led_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->led(static_cast<int>(i)),
      output);
  }

  // repeated .Sw_t sw = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sw_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->sw(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Buffer)
}

::google::protobuf::uint8* Buffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Buffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_hub = 1;
  if (this->mac_hub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_hub().data(), static_cast<int>(this->mac_hub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Buffer.mac_hub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mac_hub(), target);
  }

  // .User_t sender = 2;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->sender(), target);
  }

  // .User_t receiver = 3;
  if (this->receiver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->receiver(), target);
  }

  // .User_t cotroller = 4;
  if (this->cotroller() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->cotroller(), target);
  }

  // .Ota_t ota = 16;
  if (this->has_ota()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_ota(), deterministic, target);
  }

  // .Vpn_t vpn = 17;
  if (this->has_vpn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_vpn(), deterministic, target);
  }

  // repeated .Led_t led = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->led_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->led(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Sw_t sw = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sw_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->sw(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Buffer)
  return target;
}

size_t Buffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Buffer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Led_t led = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->led_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->led(static_cast<int>(i)));
    }
  }

  // repeated .Sw_t sw = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->sw_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sw(static_cast<int>(i)));
    }
  }

  // string mac_hub = 1;
  if (this->mac_hub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_hub());
  }

  // .Ota_t ota = 16;
  if (this->has_ota()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ota_);
  }

  // .Vpn_t vpn = 17;
  if (this->has_vpn()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vpn_);
  }

  // .User_t sender = 2;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender());
  }

  // .User_t receiver = 3;
  if (this->receiver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->receiver());
  }

  // .User_t cotroller = 4;
  if (this->cotroller() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cotroller());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Buffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  const Buffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Buffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Buffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Buffer)
    MergeFrom(*source);
  }
}

void Buffer::MergeFrom(const Buffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  led_.MergeFrom(from.led_);
  sw_.MergeFrom(from.sw_);
  if (from.mac_hub().size() > 0) {

    mac_hub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_hub_);
  }
  if (from.has_ota()) {
    mutable_ota()->::Ota_t::MergeFrom(from.ota());
  }
  if (from.has_vpn()) {
    mutable_vpn()->::Vpn_t::MergeFrom(from.vpn());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.receiver() != 0) {
    set_receiver(from.receiver());
  }
  if (from.cotroller() != 0) {
    set_cotroller(from.cotroller());
  }
}

void Buffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Buffer::CopyFrom(const Buffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Buffer::IsInitialized() const {
  return true;
}

void Buffer::Swap(Buffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Buffer::InternalSwap(Buffer* other) {
  using std::swap;
  CastToBase(&led_)->InternalSwap(CastToBase(&other->led_));
  CastToBase(&sw_)->InternalSwap(CastToBase(&other->sw_));
  mac_hub_.Swap(&other->mac_hub_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ota_, other->ota_);
  swap(vpn_, other->vpn_);
  swap(sender_, other->sender_);
  swap(receiver_, other->receiver_);
  swap(cotroller_, other->cotroller_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Buffer::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vpn_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vpn_t::kStatusFieldNumber;
const int Vpn_t::kMacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vpn_t::Vpn_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Vpn_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vpn_t)
}
Vpn_t::Vpn_t(const Vpn_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:Vpn_t)
}

void Vpn_t::SharedCtor() {
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

Vpn_t::~Vpn_t() {
  // @@protoc_insertion_point(destructor:Vpn_t)
  SharedDtor();
}

void Vpn_t::SharedDtor() {
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vpn_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vpn_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vpn_t& Vpn_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Vpn_t.base);
  return *internal_default_instance();
}


void Vpn_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Vpn_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

bool Vpn_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vpn_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mac = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Vpn_t.mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vpn_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vpn_t)
  return false;
#undef DO_
}

void Vpn_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vpn_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // string mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vpn_t.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Vpn_t)
}

::google::protobuf::uint8* Vpn_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vpn_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // string mac = 2;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vpn_t.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vpn_t)
  return target;
}

size_t Vpn_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vpn_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mac = 2;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vpn_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vpn_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Vpn_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vpn_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vpn_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vpn_t)
    MergeFrom(*source);
  }
}

void Vpn_t::MergeFrom(const Vpn_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vpn_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Vpn_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vpn_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vpn_t::CopyFrom(const Vpn_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vpn_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vpn_t::IsInitialized() const {
  return true;
}

void Vpn_t::Swap(Vpn_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vpn_t::InternalSwap(Vpn_t* other) {
  using std::swap;
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vpn_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vendor_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vendor_t::kMacVenFieldNumber;
const int Vendor_t::kDataFieldNumber;
const int Vendor_t::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vendor_t::Vendor_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Vendor_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vendor_t)
}
Vendor_t::Vendor_t(const Vendor_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_ven_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_ven().size() > 0) {
    mac_ven_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_ven_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:Vendor_t)
}

void Vendor_t::SharedCtor() {
  mac_ven_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

Vendor_t::~Vendor_t() {
  // @@protoc_insertion_point(destructor:Vendor_t)
  SharedDtor();
}

void Vendor_t::SharedDtor() {
  mac_ven_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Vendor_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vendor_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vendor_t& Vendor_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Vendor_t.base);
  return *internal_default_instance();
}


void Vendor_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Vendor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mac_ven_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

bool Vendor_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vendor_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mac_ven = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_ven()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_ven().data(), static_cast<int>(this->mac_ven().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Vendor_t.mac_ven"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Vendor_t.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vendor_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vendor_t)
  return false;
#undef DO_
}

void Vendor_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vendor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_ven = 1;
  if (this->mac_ven().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_ven().data(), static_cast<int>(this->mac_ven().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vendor_t.mac_ven");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mac_ven(), output);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vendor_t.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // bool status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Vendor_t)
}

::google::protobuf::uint8* Vendor_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vendor_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_ven = 1;
  if (this->mac_ven().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_ven().data(), static_cast<int>(this->mac_ven().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vendor_t.mac_ven");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mac_ven(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Vendor_t.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // bool status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vendor_t)
  return target;
}

size_t Vendor_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vendor_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mac_ven = 1;
  if (this->mac_ven().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_ven());
  }

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // bool status = 3;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vendor_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vendor_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Vendor_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vendor_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vendor_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vendor_t)
    MergeFrom(*source);
  }
}

void Vendor_t::MergeFrom(const Vendor_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vendor_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mac_ven().size() > 0) {

    mac_ven_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_ven_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Vendor_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vendor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vendor_t::CopyFrom(const Vendor_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vendor_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vendor_t::IsInitialized() const {
  return true;
}

void Vendor_t::Swap(Vendor_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vendor_t::InternalSwap(Vendor_t* other) {
  using std::swap;
  mac_ven_.Swap(&other->mac_ven_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vendor_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Led_t* Arena::CreateMaybeMessage< ::Led_t >(Arena* arena) {
  return Arena::CreateInternal< ::Led_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Sw_t* Arena::CreateMaybeMessage< ::Sw_t >(Arena* arena) {
  return Arena::CreateInternal< ::Sw_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Ota_t* Arena::CreateMaybeMessage< ::Ota_t >(Arena* arena) {
  return Arena::CreateInternal< ::Ota_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeepAlive_t* Arena::CreateMaybeMessage< ::KeepAlive_t >(Arena* arena) {
  return Arena::CreateInternal< ::KeepAlive_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Buffer* Arena::CreateMaybeMessage< ::Buffer >(Arena* arena) {
  return Arena::CreateInternal< ::Buffer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Vpn_t* Arena::CreateMaybeMessage< ::Vpn_t >(Arena* arena) {
  return Arena::CreateInternal< ::Vpn_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Vendor_t* Arena::CreateMaybeMessage< ::Vendor_t >(Arena* arena) {
  return Arena::CreateInternal< ::Vendor_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
